{
    "name": "Quip", 
    "description": "Aggressive compression of FASTQ and SAM/BAM files.", 
    "homepage": "http://homes.cs.washington.edu/%7Edcjones/quip/", 
    "biotoolsID": "quip", 
    "biotoolsCURIE": "biotools:quip", 
    "version": [], 
    "otherID": [], 
    "relation": [], 
    "function": [
        {
            "operation": [
                {
                    "uri": "http://edamontology.org/operation_0335", 
                    "term": "Formatting"
                }
            ], 
            "input": [], 
            "output": [], 
            "note": null, 
            "cmd": null
        }
    ], 
    "toolType": [
        "Command-line tool"
    ], 
    "topic": [
        {
            "uri": "http://edamontology.org/topic_3071", 
            "term": "Data management"
        }
    ], 
    "operatingSystem": [
        "Linux", 
        "Windows", 
        "Mac"
    ], 
    "language": [
        "C"
    ], 
    "license": "BSD-3-Clause", 
    "collectionID": [], 
    "maturity": "Mature", 
    "cost": null, 
    "accessibility": [], 
    "elixirPlatform": [], 
    "elixirNode": [], 
    "link": [], 
    "download": [], 
    "documentation": [
        {
            "url": "https://github.com/dcjones/quip#readme", 
            "type": "General", 
            "note": null
        }
    ], 
    "publication": [
        {
            "doi": null, 
            "pmid": "22904078", 
            "pmcid": null, 
            "type": null, 
            "version": null, 
            "metadata": {
                "title": "Compression of next-generation sequencing reads aided by highly efficient de novo assembly", 
                "abstract": "We present Quip, a lossless compression algorithm for next-generation sequencing data in the FASTQ and SAM/BAM formats. In addition to implementing reference-based compression, we have developed, to our knowledge, the first assembly-based compressor, using a novel de novo assembly algorithm. A probabilistic data structure is used to dramatically reduce the memory required by traditional de Bruijn graph assemblers, allowing millions of reads to be assembled very efficiently. Read sequences are then stored as positions within the assembled contigs. This is combined with statistical compression of read identifiers, quality scores, alignment information and sequences, effectively collapsing very large data sets to <15% of their original size with no loss of information. Availability: Quip is freely available under the 3-clause BSD license from http://cs.washington.edu/homes/dcjones/quip. Â© 2012 The Author(s).", 
                "date": "2012-12-01T00:00:00Z", 
                "citationCount": 92, 
                "authors": [
                    {
                        "name": "Jones D.C."
                    }, 
                    {
                        "name": "Ruzzo W.L."
                    }, 
                    {
                        "name": "Peng X."
                    }, 
                    {
                        "name": "Katze M.G."
                    }
                ], 
                "journal": "Nucleic Acids Research"
            }
        }
    ], 
    "credit": [
        {
            "name": "Daniel C. Jones", 
            "email": null, 
            "url": "https://github.com/dcjones", 
            "orcidid": null, 
            "typeEntity": "Person", 
            "typeRole": [
                "Primary contact"
            ], 
            "note": null
        }
    ], 
    "owner": "seqwiki_import", 
    "additionDate": "2017-01-13T13:16:01Z", 
    "lastUpdate": "2018-12-10T12:58:56Z", 
    "editPermission": {
        "type": "private", 
        "authors": []
    }, 
    "validated": 1, 
    "homepage_status": 0, 
    "elixir_badge": 0
}