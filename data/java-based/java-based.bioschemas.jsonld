{
  "@context": {
    "biotools": "https://bio.tools/ontology/",
    "bsc": "http://bioschemas.org/",
    "edam": "http://edamontology.org/",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.tools/Java-based",
      "@type": "sc:SoftwareApplication",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3678"
        },
        {
          "@id": "edam:topic_0605"
        },
        {
          "@id": "edam:topic_3372"
        },
        {
          "@id": "edam:topic_0621"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.7287/PEERJ.PREPRINTS.2496V2"
      },
      "sc:description": "An exploratory study of the state of practice of performance testing in Java-based open source projects.\n\nThe usage of open source (OS) software is nowadays wide- spread across many industries and domains. While the functional quality of OS projects is considered to be up to par with that of closed-source software, much is unknown about the quality in terms of non-functional attributes, such as performance. One challenge for OS developers is that, unlike for functional testing, there is a lack of accepted best practices for performance testing. To reveal the state of practice of performance testing in OS projects, we conduct an exploratory study on 111 Java-based OS projects from GitHub.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'tooling', 'low-friction', 'non-parameterized', 'performance'",
      "sc:featureList": {
        "@id": "edam:operation_2238"
      },
      "sc:name": "Java-based",
      "sc:url": "https://doi.org/10.7287/PEERJ.PREPRINTS.2496V2"
    },
    {
      "@id": "https://doi.org/10.7287/PEERJ.PREPRINTS.2496V2",
      "@type": "sc:CreativeWork"
    }
  ]
}