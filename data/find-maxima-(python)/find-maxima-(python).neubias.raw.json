{
    "body": [
        {
            "format": "basic_html",
            "processed": "<p>Maxima finding algorithm recreated from implementation in Fiji(ImageJ)</p>\n\n<p>This is a re-implementation of the java plugin written by Michael Schmid and Wayne Rasband for ImageJ. The original java code source can be found in:\u00a0<a href=\"https://imagej.nih.gov/ij/developer/source/ij/plugin/filter/MaximumFinder.java.html\">https://imagej.nih.gov/ij/developer/source/ij/plugin/filter/MaximumFinder.java.html</a>\u00a0</p>\n\n<p>This implementation remains faithful to the original implementation but is not 100% optimised. The java version is faster but this could be alleviated by compiling c code for parts of the code. This script is simply to provide the functionality of the ImageJ find maxima algorithm to individuals writing pure python script.</p>",
            "summary": "",
            "value": "<p>Maxima finding algorithm recreated from implementation in Fiji(ImageJ)</p>\r\n\r\n<p>This is a re-implementation of the java plugin written by Michael Schmid and Wayne Rasband for ImageJ. The original java code source can be found in:&nbsp;<a href=\"https://imagej.nih.gov/ij/developer/source/ij/plugin/filter/MaximumFinder.java.html\">https://imagej.nih.gov/ij/developer/source/ij/plugin/filter/MaximumFinder.java.html</a>&nbsp;</p>\r\n\r\n<p>This implementation remains faithful to the original implementation but is not 100% optimised. The java version is faster but this could be alleviated by compiling c code for parts of the code. This script is simply to provide the functionality of the ImageJ find maxima algorithm to individuals writing pure python script.</p>\r\n"
        }
    ],
    "changed": [
        {
            "value": 1551356811
        }
    ],
    "created": [
        {
            "value": 1539798423
        }
    ],
    "default_langcode": [
        {
            "value": true
        }
    ],
    "field_attribution_instructions": [],
    "field_free_tagging": [
        {
            "target_id": 4718,
            "target_type": "taxonomy_term",
            "target_uuid": "7267cbac-ff55-4e08-8835-190c81a1c402",
            "url": "/taxonomy/term/4718"
        },
        {
            "target_id": 4735,
            "target_type": "taxonomy_term",
            "target_uuid": "16eb9ed2-e1d0-485f-8422-bf9b2936b41d",
            "url": "/taxonomy/term/4735"
        }
    ],
    "field_give_feedback_on_this_soft": [
        {
            "cid": 388,
            "comment_count": 1,
            "last_comment_name": "",
            "last_comment_timestamp": 1551343179,
            "last_comment_uid": 161,
            "status": 2
        }
    ],
    "field_has_author": [
        {
            "value": "Waithe, Dominic orcid.org/0000-0003-2685-4226"
        }
    ],
    "field_has_biological_terms": [],
    "field_has_comparison": [
        {
            "options": [],
            "title": "",
            "uri": "entity:node/1042"
        }
    ],
    "field_has_documentation": [
        {
            "options": [],
            "title": "Link to README text.",
            "uri": "https://github.com/dwaithe/generalMacros/tree/master/maximaFinding"
        }
    ],
    "field_has_doi": [],
    "field_has_entry_curator": [
        {
            "target_id": 3118,
            "target_type": "user",
            "target_uuid": "57948909-261b-4805-8926-1fdc3f47e2d1",
            "url": "/user/3118"
        }
    ],
    "field_has_function": [
        {
            "target_id": 4111,
            "target_type": "taxonomy_term",
            "target_uuid": "http://edamontology.org/operation_3443",
            "url": "/image-analysis"
        },
        {
            "target_id": 4065,
            "target_type": "taxonomy_term",
            "target_uuid": "http://edamontology.org/operation_Object_detection",
            "url": "/image-feature-detection"
        }
    ],
    "field_has_implementation": [
        {
            "target_id": 4341,
            "target_type": "taxonomy_term",
            "target_uuid": "4e110085-0702-47e5-85ef-0e06e082eb70",
            "url": "/taxonomy/term/4341"
        }
    ],
    "field_has_interaction_level": [
        {
            "target_id": 3572,
            "target_type": "taxonomy_term",
            "target_uuid": "551f908e-bb43-410a-9420-9d98f12442a0",
            "url": "/taxonomy/term/3572"
        }
    ],
    "field_has_license": [
        {
            "value": "GNU General Public License v3.0"
        }
    ],
    "field_has_location": [
        {
            "options": [],
            "title": "link to ipython github.",
            "uri": "https://github.com/dwaithe/generalMacros/blob/master/maximaFinding/find%20Maxima.ipynb"
        }
    ],
    "field_has_programming_language": [
        {
            "target_id": 3592,
            "target_type": "taxonomy_term",
            "target_uuid": "85d4200d-894f-4d4e-b6f2-e6dd3282d534",
            "url": "/taxonomy/term/3592"
        }
    ],
    "field_has_reference_publication": [],
    "field_has_topic": [],
    "field_has_usage_example": [],
    "field_image": [
        {
            "alt": "find maxima comparison.",
            "height": 700,
            "target_id": 502,
            "target_type": "file",
            "target_uuid": "b20a6f34-cd18-4675-bcd9-d16cac0ea170",
            "title": "",
            "url": "http://test.biii.eu/sites/default/files/2018-10/Screenshot%202018-10-17%20at%2018.45.32.png",
            "width": 1448
        }
    ],
    "field_is_compatible_with": [],
    "field_is_covered_by_training_mat": [],
    "field_is_dependent_of": [
        {
            "target_id": 1312,
            "target_type": "node",
            "target_uuid": "ab781ca3-2495-4c2e-9a01-3942f1eccaa3",
            "url": "/python"
        },
        {
            "target_id": 1287,
            "target_type": "node",
            "target_uuid": "a67e6a8d-40ab-499c-9a97-0c7df51d6ae0",
            "url": "/pil"
        },
        {
            "target_id": 1286,
            "target_type": "node",
            "target_uuid": "9739b7ce-e717-40b3-8502-ae77681e120d",
            "url": "/scipy"
        },
        {
            "target_id": 1368,
            "target_type": "node",
            "target_uuid": "4ea92c55-9559-4b24-aba7-95e977552f4a",
            "url": "/jupyter"
        },
        {
            "target_id": 1369,
            "target_type": "node",
            "target_uuid": "f3d5b59a-4a16-40a0-8bc4-3498bcedbd9d",
            "url": "/jupyter-notebook"
        }
    ],
    "field_license_openness": [
        {
            "target_id": 3575,
            "target_type": "taxonomy_term",
            "target_uuid": "06a4d439-36c4-4f19-9b3a-95f50a53da20",
            "url": "/taxonomy/term/3575"
        }
    ],
    "field_platform": [
        {
            "target_id": 32,
            "target_type": "taxonomy_term",
            "target_uuid": "e5fa2325-a315-46a2-a7e6-85f5ffda2ddd",
            "url": "/taxonomy/term/32"
        },
        {
            "target_id": 29,
            "target_type": "taxonomy_term",
            "target_uuid": "11021caa-a45d-4287-a01d-dc148498e120",
            "url": "/taxonomy/term/29"
        },
        {
            "target_id": 31,
            "target_type": "taxonomy_term",
            "target_uuid": "68f9790f-8330-48f4-9404-4ad5c9a7de5d",
            "url": "/taxonomy/term/31"
        }
    ],
    "field_supported_image_dimension": [
        {
            "target_id": 3561,
            "target_type": "taxonomy_term",
            "target_uuid": "92973a3c-32a3-4d2b-b290-62bd0d78a3fb",
            "url": "/taxonomy/term/3561"
        }
    ],
    "field_type": [
        {
            "target_id": 8,
            "target_type": "taxonomy_term",
            "target_uuid": "e4860247-2929-4f76-9bfb-6f1a95391204",
            "url": "/taxonomy/term/8"
        }
    ],
    "field_workflow_steps": [],
    "langcode": [
        {
            "value": "en"
        }
    ],
    "nid": [
        {
            "value": 1367
        }
    ],
    "path": [
        {
            "alias": "/find-maxima-python",
            "langcode": "en",
            "pid": 1437
        }
    ],
    "promote": [
        {
            "value": true
        }
    ],
    "revision_log": [
        {
            "value": "change the type from workflow to component. "
        }
    ],
    "revision_timestamp": [
        {
            "value": 1551356811
        }
    ],
    "revision_translation_affected": [
        {
            "value": true
        }
    ],
    "revision_uid": [
        {
            "target_id": 94,
            "target_type": "user",
            "target_uuid": "aa749c9e-5b9a-4fdf-83ce-6b94538fe57c",
            "url": "/user/94"
        }
    ],
    "status": [
        {
            "value": true
        }
    ],
    "sticky": [
        {
            "value": false
        }
    ],
    "synonyms": [],
    "title": [
        {
            "value": "Find Maxima (Python)"
        }
    ],
    "type": [
        {
            "target_id": "software",
            "target_type": "node_type",
            "target_uuid": "54008715-4695-438a-9893-5da3c88d8f5d"
        }
    ],
    "uid": [
        {
            "target_id": 3118,
            "target_type": "user",
            "target_uuid": "57948909-261b-4805-8926-1fdc3f47e2d1",
            "url": "/user/3118"
        }
    ],
    "uuid": [
        {
            "value": "79cd5c15-5c4f-4375-aa51-8f078360ea73"
        }
    ],
    "vid": [
        {
            "value": 2462
        }
    ]
}